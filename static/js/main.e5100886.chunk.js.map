{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","class","href","title","type","id","defaultProps","about","TextForm","useState","text","setText","className","heading","value","onChange","event","console","log","target","rows","onClick","newText","toUpperCase","toLowerCase","split","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAGe,SAASA,EAAOC,GAC3B,OACI,sBAAKC,MAAM,8CAAX,UACA,oBAAGA,MAAM,eAAeC,KAAK,IAA7B,cAAmCF,EAAMG,MAAzC,OACA,wBAAQF,MAAM,iBAAiBG,KAAK,SAAS,cAAY,WAAW,cAAY,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAAlL,SACE,sBAAMH,MAAM,0BAGd,qBAAKA,MAAM,2BAA2BI,GAAG,yBAAzC,SACE,qBAAIJ,MAAM,qBAAV,UACE,oBAAIA,MAAM,kBAAV,SACE,oBAAGA,MAAM,WAAWC,KAAK,IAAzB,cAA8B,sBAAMD,MAAM,UAAZ,4BAEhC,oBAAIA,MAAM,WAAV,SACE,mBAAGA,MAAM,WAAWC,KAAK,wBAgBrCH,EAAOO,aAAe,CACpBH,MAAO,eACPI,MAAQ,c,WCjCG,SAASC,EAASR,GAE7B,IAwBA,EAAwBS,mBAAS,mBAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,OACI,qCACA,sBAAKC,UAAU,YAAf,UAES,mCAAMZ,EAAMa,QAAZ,OACD,qBAAKD,UAAU,OAAf,SACI,0BAAUA,UAAU,eAAeE,MAAOJ,EAAMK,SAbzC,SAACC,GACpBC,QAAQC,IAAI,aACZP,EAAQK,EAAMG,OAAOL,QAWiET,GAAG,QAAQe,KAAK,QAE9F,wBAAQhB,KAAK,SAASH,MAAM,uBAAuBoB,QAlCzC,WAClBJ,QAAQC,IAAI,wBAA0BR,GACtC,IAAIY,EAAUZ,EAAKa,cACnBZ,EAAQW,IA+BA,oCACA,wBAAQlB,KAAK,SAASH,MAAM,uBAAuBoB,QA7BzC,WAClBJ,QAAQC,IAAI,wBAA0BR,GACtC,IAAIY,EAAUZ,EAAKc,cACnBb,EAAQW,IA0BA,oCACA,wBAAQlB,KAAK,SAASH,MAAM,kBAAkBoB,QAxBtC,WAChBJ,QAAQC,IAAI,wBAA0BR,GAEtCC,EADc,KAsBN,6BAKR,sBAAKC,UAAU,iBAAf,UACI,2DACA,kCAAKF,EAAKe,MAAM,KAAKC,OAArB,UAAoChB,EAAKgB,OAAzC,iBACA,sEAAyC,KAAQhB,EAAKe,MAAM,KAAKC,OAAjE,gBAEA,gDACA,mCAAMhB,EAAN,aC5BSiB,MAnBrB,WACE,OACE,qCAED,cAAC5B,EAAD,CAAQI,MAAM,qBAAqBI,MAAM,aAEzC,qBAAKK,UAAU,sBAAf,SACA,cAACJ,EAAD,CAAUK,QAAQ,oCCCNe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.e5100886.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <a class=\"navbar-brand\" href=\"#\"> {props.title} </a>\r\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n      \r\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul class=\"navbar-nav mr-auto\">\r\n            <li class=\"nav-item active\">\r\n              <a class=\"nav-link\" href=\"#\"> <span class=\"sr-only\">(current)</span></a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" href=\"#About.js\"></a>\r\n            </li>\r\n          \r\n          </ul>\r\n         \r\n        </div>\r\n      </nav>\r\n      \r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    about: PropTypes.string.isRequired\r\n  };\r\n\r\n  Navbar.defaultProps = {\r\n    title: 'Digital Dany',\r\n    about:  'blog about'\r\n    \r\n  };\r\n ","import React, { useState } from 'react';\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleupClick = ()=>{\r\n        console.log(\"Uppercase was Clicked\" + text );\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n    }\r\n\r\n    const handleLoClick = ()=>{\r\n        console.log(\"Uppercase was Clicked\" + text );\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n    }\r\n    \r\n    const handleclear = ()=>{\r\n        console.log(\"Uppercase was Clicked\" + text );\r\n        let newText = '';\r\n        setText(newText)\r\n    }\r\n\r\n       \r\n    const handleOnchange = (event)=> {\r\n        console.log(\"On change\");\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const [text, setText] = useState('Enter text here');\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n        \r\n                 <h1> {props.heading} </h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnchange} id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button type=\"button\" class=\"btn btn-primary mx-2\" onClick={handleupClick} > Convert to Uppercase </button>\r\n                <button type=\"button\" class=\"btn btn-primary mx-2\" onClick={handleLoClick} > Convert to Lowercase </button>\r\n                <button type=\"button\" class=\"btn btn-primary\" onClick={handleclear} > Clear Text </button>\r\n              \r\n         \r\n        </div>\r\n          \r\n        <div className=\"container my-3\">\r\n            <h2>Your Text Summary Details</h2>\r\n            <p> {text.split(\" \").length} words {text.length} character </p>\r\n            <p> Time need to Read this Paragraph is {0.004 * text.split(\" \").length}  minutes </p>\r\n\r\n            <h3> Text Preview </h3>\r\n            <p>  {text} </p>\r\n \r\n         \r\n        </div>\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\nfunction App() {\n  return (\n    <>\n    \n   <Navbar title=\"Word Count Project\" about=\"About us\" />\n\n   <div className=\"container mb-3 my-3\">\n   <TextForm heading=\"Enter the Text to analyse\"/>        \n   </div> \n\n\n   \n   \n\n    </>\n\n      );\n}\n\n      export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}